<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tw.com.ispan.eeit48</groupId>
    <artifactId>seafood-wholesaler-oms</artifactId>
    <version>1.0.0</version>
    <packaging>war</packaging>

    <name>seafood-wholesaler-oms</name>
    <description>NSY is an OMS for seafood Wholesaler</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <java.version>17</java.version>
        <start-class>tw.com.ispan.eeit48.OmsApplication</start-class>
        <dockerfile-maven-plugin.version>1.4.12</dockerfile-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20220924</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.10.7</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.10.7</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.10.7</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
      		<groupId>org.springframework.boot</groupId>
      		<artifactId>spring-boot-starter-websocket</artifactId>
    	</dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

<!--    Below is for docker image building, so far I use docker-compose instead -->
<!--        <dependency>-->
<!--            <groupId>com.spotify</groupId>-->
<!--            <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--            <version>${dockerfile-maven-plugin.version}</version>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

<!--    Below is for docker image building, so far I use docker-compose instead -->
<!--    <profiles>-->
<!--        <profile>-->
<!--            <id>build-docker</id>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    <plugin>-->
<!--                        <groupId>com.spotify</groupId>-->
<!--                        <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--                        <version>${dockerfile-maven-plugin.version}</version>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>default</id>-->
<!--                                <goals>-->
<!--                                    <goal>build</goal>-->
<!--                                    <goal>push</goal>-->
<!--                                </goals>-->
<!--                                <phase>pre-integration-test</phase>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                        <configuration>-->
<!--                            <dockerfile>${project.basedir}/dockerfile</dockerfile>-->
<!--                            <repository>ericwangiscool/seafood-wholesaler-oms</repository>-->
<!--                            <tag>${project.version}</tag>-->
<!--                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
<!--                            <buildArgs>-->
<!--                                <WAR_FILE>${project.build.finalName}.war</WAR_FILE>-->
<!--                            </buildArgs>-->
<!--                        </configuration>-->
<!--                    </plugin>-->
<!--                </plugins>-->
<!--            </build>-->
<!--        </profile>-->
<!--    </profiles>-->
</project>